{
	"common": {
		"common": {
			"required": [
				"executable"
			],
			"properties": {
				"gdbpath": {
					"type": "string",
					"description": "Path to the gdb executable or the command if in PATH",
					"default": "arm-none-eabi-gdb"
				},
				"executable": {
					"type": "string",
					"description": "Path of executable"
				},
				"cwd": {
					"type": "string",
					"description": "Path of project"
				},
				"debugger_args": {
					"type": "array",
					"description": "Additional arguments to pass to GDB",
					"default": []
				},
				"printCalls": {
					"type": "boolean",
					"description": "Prints all GDB calls to the console",
					"default": false
				},
				"showDevDebugOutput": {
					"type": "boolean",
					"description": "Prints all GDB responses to the console",
					"default": false
				},
				"svdFile": {
					"type": "string",
					"description": "Path to an SVD file describing the peripherals of the microcontroller; if not supplied then one may be selected based upon the 'device' entered.",
					"default": null
				},
				"graphConfig": {
					"type": "array",
					"items": {
						"oneOf": [
							{
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"enum": [
											"realtime"
										]
									},
									"timespan": {
										"type": "number",
										"default": 30,
										"description": "Length of time (seconds) to be plotted on screen."
									},
									"minimum": {
										"type": "number",
										"default": 0,
										"description": "Minimum value for the Y-Axis"
									},
									"maximum": {
										"type": "number",
										"default": 65535,
										"description": "Maximum value for the X-Axis"
									},
									"plots": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"graphId": {
													"type": "string",
													"description": "Graph Data Source Id for the plot."
												},
												"label": {
													"type": "string",
													"description": "A label for this data set"
												},
												"color": {
													"type": "string",
													"pattern": "^#[0-9a-fA-F]{3}([0-9a-fA-F]{3})?$"
												}
											},
											"required": [
												"graphId"
											]
										},
										"description": "Plot configurations. Data sources must be configured for \"graph\" (or \"advanced\" with a decoder that sends graph data) in the \"swoConfig\" section"
									},
									"annotate": {
										"type": "boolean",
										"default": true,
										"description": "Create annotations on the graph for when the target processor starts and stops execution. (green line for starting execution, red line for stopping execution)."
									},
									"label": {
										"type": "string",
										"description": "Label for Graph"
									}
								},
								"required": [ "label", "plots", "minimum", "maximum" ]
							},
							{
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"enum": [
											"x-y-plot"
										]
									},
									"xGraphId": {
										"type": "string",
										"description": "Graph Data Source Id for the X axis"
									},
									"yGraphId": {
										"type": "string",
										"description": "Graph Data Source Id Port for the Y axis"
									},
									"label": {
										"type": "string",
										"description": "Label for graph"
									},
									"xMinimum": {
										"type": "number",
										"description": "Minimum value on the X-Axis",
										"default": 0
									},
									"xMaximum": {
										"type": "number",
										"description": "Maximum value on the X-Axis",
										"default": 65535
									},
									"yMinimum": {
										"type": "number",
										"description": "Minimum value on the Y-Axis",
										"default": 0
									},
									"yMaximum": {
										"type": "number",
										"description": "Maximum value on the Y-Axis",
										"default": 65535
									},
									"timespan": {
										"type": "number",
										"description": "The amount of time (seconds) that the XY Plot will show the trace for.",
										"default": 10
									}
								},
								"required": [
									"xGraphId",
									"yGraphId",
									"label"
								]
							}
						]
					}
				},
				"swoConfig": {
					"type": "object",
					"properties": {
						"enabled": {
							"type": "boolean",
							"default": false,
							"description": "Enable SWO decoding."
						},
						"swoFrequency": {
							"type": "number",
							"default": 0,
							"description": "SWO frequency in Hz; 0 will attempt to automatically calculate."
						},
						"cpuFrequency": {
							"type": "number",
							"default": 0,
							"description": "Target CPU frequency in Hz; 0 will attempt to automatically calculate."
						},
						"ports": {
							"type": "array",
							"description": "SWO Port Configuration",
							"items": {
								"anyOf": [
									{
										"type": "object",
										"properties": {
											"type":  { "type": "string", "enum": ["console"] },
											"number": { "type": "number", "description": "SWO Port Number", "minimum": 0, "maximum": 31 },
											"label": { "type": "string", "description": "A label for the output window." }
										},
										"required": [ "number" ]
									},
									{
										"type": "object",
										"properties": {
											"type":  { "type": "string", "enum": ["binary"] },
											"number": { "type": "number", "description": "ITM Port Number", "minimum": 0, "maximum": 31 },
											"encoding": {
												"type": "string",
												"description": "This property is only used for binary and graph output formats.",
												"default": "unsigned",
												"enum": [
													"unsigned",
													"signed",
													"Q16.16",
													"float"
												]
											},
											"scale": {
												"type": "number",
												"description": "This setting will scale the raw value from the ITM port by the specified value. Can be used, for example, to scale a raw n-bit ADC reading to a voltage value. (e.g to scale a 12-bit ADC reading to a 3.3v scale you would need a scale value of 3.3/4096 = 0.0008056640625",
												"default": 1
											},
											"label": { "type": "string", "description": "A label for the output window." }
										},
										"required": ["number"]
									},
									{
										"type": "object",
										"properties": {
											"type":  { "type": "string", "enum": ["graph"] },
											"number": { "type": "number", "description": "ITM Port Number", "minimum": 0, "maximum": 31 },
											"encoding": {
												"type": "string",
												"description": "This property is only used for binary and graph output formats.",
												"default": "unsigned",
												"enum": [
													"unsigned",
													"signed",
													"Q16.16",
													"float"
												]
											},
											"scale": {
												"type": "number",
												"description": "This setting will scale the raw value from the ITM port by the specified value. Can be used, for example, to scale a raw n-bit ADC reading to a voltage value. (e.g to scale a 12-bit ADC reading to a 3.3v scale you would need a scale value of 3.3/4096 = 0.0008056640625",
												"default": 1
											},
											"graphId": {
												"type": "string",
												"description": "The identifier to use for this data in graph configurations."
											}
										},
										"required": ["number", "graphId"]
									},
									{
										"type": "object",
										"properties": {
											"type":  { "type": "string", "enum": ["advanced"] },
											"number": { "type": "number", "description": "ITM Port Number", "minimum": 0, "maximum": 31 },
											"decoder": {
												"type": "string",
												"description": "Path to a javascript module to implement the decoding functionality."
											},
											"config": { "type": "object", "additionalProperties": true }
										},
										"required": ["number", "decoder"]
									}
								]
							}
						}
					},
					"required": []
				}
			}
		},
		"launch": {
			"required": [],
			"properties": {}
		},
		"attach": {
			"required": [],
			"properties": {}
		}
	},
	"jlink-gdb": {
		"common": {
			"required": [
				"device"
			],
			"properties": {
				"jlinkpath": {
					"type": "string",
					"description": "Path to the JLink",
					"default": "JLinkGDBServer"
				},
				"device": {
					"type": "string",
					"description": "J-Link Target Device Identifier",
					"default": ""
				},
				"serialNumber": {
					"type": "string",
					"description": "J-Link Serial Number - only needed if multiple J-Links are connected to the computer",
					"default": null
				},
				"ipAddress": {
					"type": "string",
					"description": "IP Address for networked J-Link Adapter",
					"default": null,
					"pattern": "^(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])$"
				},
				"rtos": {
					"type": "string",
					"enum": [ "none", "FreeRTOS", "embOS" ],
					"description": "If the embedded program your are debugging uses an RTOS and you want to have multi-threaded aware debugging enter your RTOS here.",
					"default": "none"
				}
			}
		},
		"launch": {
			"required": [],
			"properties": {}
		},
		"attach": {
			"required": [],
			"properties": {}
		}
	},
	"openocd-gdb": {
		"common": {
			"required": [
				"configFiles"
			],
			"properties": {
				"openOCDPath": {
					"type": "string",
					"description": "Path to the openocd executable",
					"default": "openocd"
				},
				"configFiles": {
					"type": "array",
					"description": "OpenOCD configuration file(s) to load",
					"items": { "type": "string" }
				},
				"rtos": {
					"type": "string",
					"enum": [ "none", "eCos", "ThreadX", "FreeRTOS", "ChibiOS", "embKernel", "mqx", "uCOS-III"],
					"description": "If the embedded program your are debugging uses an RTOS and you want to have multi-threaded aware debugging enter your RTOS here.",
					"default": "none"
				}
			}
		},
		"launch": {
			"required": [],
			"properties": {}
		},
		"attach": {
			"required": [],
			"properties": {}
		}
	},
	"pyocd-gdb": {
		"common": {
			"properties": {
				"pyocdPath": {
					"type": "string",
					"description": "Path to the pyocd-gdbserver executable",
					"default": "pyocd-gdbserver"
				},
				"boardId": {
					"type": "string",
					"description": "Connect to board by board id. Only needed if multiple PyOCD compatible boards are connected."
				},
				"target": {
					"type": "string",
					"description": "PyOCD Target identifier. Needed if debugging custom hardware; not needed for official MBed boards.",
					"enum": ["kl25z","kl26z","lpc824","k82f25615","lpc11xx_32","kinetis","lpc800","lpc4088qsb","maxwsnenv","kl05z","k64f","lpc1768","lpc4088","lpc4330","max32600mbed","k66f18","w7500","ke18f16","k22f","lpc4088dm","ke15z7","kv11z7","nrf51","nrf52","kv10z7","k20d50m","kl46z","stm32f103rc","kl27z4","kw40z4","cortex_m","lpc11u24","stm32f051","kl02z","ncs36510","kl28z","kl43z4","kw01z4"]
				}
			},
			"required": []
		},
		"launch": {
			"required": [],
			"properties": {}
		},
		"attach": {
			"required": [],
			"properties": {}
		},
		"removeProperties": [ "swoConfig", "graphConfig" ]
	}
}